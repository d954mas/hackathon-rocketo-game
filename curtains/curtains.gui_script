local COMMON = require "libs.common"
local CURTAINS = require "curtains.curtains"
local BaseGuiScript = require "libs_project.scripts.base_gui_script"

---@class CurtainsGuiScript:ScriptMain
local Script = COMMON.class("CurtainsGuiScript", BaseGuiScript)

function Script:init()
    BaseGuiScript.init(self, { context_name = COMMON.CONTEXT.NAMES.CURTAINS_GUI })
end

function Script:bind_vh()
    self.vh = {
        curtain_top = gui.get_node("curtain_top"),
        curtain_bottom = gui.get_node("curtain_bottom"),
    }
    self.views = {
    }
end

function Script:init_gui()
    BaseGuiScript.init_gui(self)
    gui.set_render_order(COMMON.CONSTANTS.GUI_ORDER.CURTAINS)
    self:curtains_closed()
end

function Script:curtains_opened()
    gui.set_position(self.vh.curtain_top, CURTAINS.config.top.position_open)
    gui.set_position(self.vh.curtain_bottom, CURTAINS.config.bottom.position_open)
    gui.set_enabled(self.vh.curtain_top,false)
    gui.set_enabled(self.vh.curtain_bottom,false)
end

function Script:curtains_enabled()
    gui.set_enabled(self.vh.curtain_top,true)
    gui.set_enabled(self.vh.curtain_bottom,true)
end

function Script:curtains_closed()
    self:curtains_enabled()
    gui.set_position(self.vh.curtain_top, CURTAINS.config.top.position_closed)
    gui.set_position(self.vh.curtain_bottom, CURTAINS.config.bottom.position_closed)
end

function Script:update(dt)
    BaseGuiScript.update(self, dt)
end

COMMON.N28S.register_scripts({ Script() })